	Adding nVidia Cuda Toolkit 10.2 (Patch2)
Log dir:  ./runs/run_bagnet
Num classes (k) =  200
Traceback (most recent call last):
  File "main.py", line 240, in <module>
    bagnet_process(training=False, visualize=False, visualize_trainloader=False, cluster=True, cluster_training=True, cluster_testing=False)
  File "main.py", line 104, in bagnet_process
    bagnet = bagnet33(device, pretrained=True, out_channel=out_channel)
  File "/home/s2845016/projects/whitebox-deeplearning/bagnet/bagnet.py", line 130, in bagnet33
    model_dict = model_zoo.load_url(model_urls['bagnet33'], map_location=device)
  File "/home/s2845016/miniconda3/envs/capitaSelecta/lib/python3.8/site-packages/torch/hub.py", line 575, in load_state_dict_from_url
    return torch.load(cached_file, map_location=map_location)
  File "/home/s2845016/miniconda3/envs/capitaSelecta/lib/python3.8/site-packages/torch/serialization.py", line 608, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
  File "/home/s2845016/miniconda3/envs/capitaSelecta/lib/python3.8/site-packages/torch/serialization.py", line 787, in _legacy_load
    result = unpickler.load()
  File "/home/s2845016/miniconda3/envs/capitaSelecta/lib/python3.8/site-packages/torch/serialization.py", line 743, in persistent_load
    deserialized_objects[root_key] = restore_location(obj, location)
  File "/home/s2845016/miniconda3/envs/capitaSelecta/lib/python3.8/site-packages/torch/serialization.py", line 827, in restore_location
    return default_restore_location(storage, str(map_location))
  File "/home/s2845016/miniconda3/envs/capitaSelecta/lib/python3.8/site-packages/torch/serialization.py", line 175, in default_restore_location
    result = fn(storage, location)
  File "/home/s2845016/miniconda3/envs/capitaSelecta/lib/python3.8/site-packages/torch/serialization.py", line 155, in _cuda_deserialize
    return storage_type(obj.size())
  File "/home/s2845016/miniconda3/envs/capitaSelecta/lib/python3.8/site-packages/torch/cuda/__init__.py", line 528, in _lazy_new
    return super(_CudaBase, cls).__new__(cls, *args, **kwargs)
RuntimeError: CUDA error: out of memory
CUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
